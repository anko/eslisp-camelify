(var looksLikeNumber (lambda (atomText)
                       (return ((. atomText match) (regex "^-?\\d+(\\.\\d+)?$")))))

(var camelify
     (lambda (x)
       (if (== x "unquote-splicing") (return x))
       (if ((. (regex ^-+$) test) x) (return x))
       (if (looksLikeNumber x) (return x))
       (return
         ((. x replace)
          (regex \(.\)[-]+\(.\) g)
          (lambda (_ cBefore cAfter)
            (return (+ cBefore
                       ((. cAfter toUpperCase)))))))))



(var transform
   (lambda
     (node)
     (if (== (. node type) "list")
        (block (return
                 (object "type" "list"
                         "values" ((. node values map)
                                   (lambda (y) (return (transform y)))))))
        (block (if (== (. node type) "atom")
                 (return (object "type" "atom"
                                 "value" (camelify (. node value))))
                 (return node))))))

(= (. module exports)
   (lambda
     ()
     (var args ((. Array prototype slice call) arguments 0))
     (return ((. this multi apply) null ((. args map) transform)))))
