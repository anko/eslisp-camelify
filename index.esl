(var camelify
   (lambda (x)
           (if (== x "unquote-splicing") (return x))
           (if ((. (regex ^-+$) test) x) (return x))
           (return
                 ((. x replace)
                  (regex [-]+\(.\)? g)
                  (lambda (_ c) (return ((. (|| c "") toUpperCase))))))))



(var transform
   (lambda
     (node)
     (if (instanceof node Array)
        (block (return ((. node map) (lambda (y) (return (transform y))))) )
        (block (if (|| (== (typeof node) "string")
                       (== (typeof node) "number"))
                 (return node)
                 (return (object atom (camelify (. node atom)))) )))))

(= (. module exports)
   (lambda
     ()
     (var args ((. Array prototype slice call) arguments 0))
     (return ((. this multi apply) null ((. args map) transform)))))
